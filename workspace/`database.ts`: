import sqlite3 from 'sqlite3';
import { User, Joke } from './models';

export class Database {
  private db: sqlite3.Database;

  constructor() {
    this.db = new sqlite3.Database(':memory:');
  }

  initializeTables(): void {
    this.db.serialize(() => {
      this.db.run(`
        CREATE TABLE IF NOT EXISTS User (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          username TEXT,
          password TEXT
        )
      `);

      this.db.run(`
        CREATE TABLE IF NOT EXISTS Joke (
          id TEXT PRIMARY KEY,
          jokeContent TEXT,
          userId INTEGER,
          FOREIGN KEY (userId) REFERENCES User(id)
        )
      `);
    });
  }

  insertUser(user: User): Promise<number> {
    return new Promise((resolve, reject) => {
      this.db.run(
        'INSERT INTO User (username, password) VALUES (?, ?)',
        [user.username, user.password],
        function (err) {
          if (err) {
            reject(err);
          } else {
            resolve(this.lastID);
          }
        }
      );
    });
  }

  insertJoke(joke: Joke): Promise<void> {
    return new Promise((resolve, reject) => {
      this.db.run(
        'INSERT INTO Joke (id, jokeContent, userId) VALUES (?, ?, ?)',
        [joke.id, joke.jokeContent, joke.userId],
        function (err) {
          if (err) {
            reject(err);
          } else {
            resolve();
          }
        }
      );
    });
  }
}
